<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectListCount">
		SELECT COUNT(*) COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
	</entry>
	
	<!-- 동네소식 총 게시글 개수 구하기 -->
	<entry key="newsSelectListCount">
		SELECT COUNT(*) COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
		AND BOARD_NAME = '동네 소식' 
	</entry>

	<!-- 동네소식 리스트 불러오기(아직 좋아요 카운트 안불러옴) -->
	<entry key="newsSelectList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM (SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT, COUNT(BOARDLIKE_NO) LIKE_COUNT
		        		FROM BOARD B
		        		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		        		LEFT JOIN BOARD_LIKE ON (BOARDLIKE_NO = BOARD_NO)
		        		WHERE B.STATUS ='Y' AND BOARD_NAME = '동네 소식'
		        		GROUP BY BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT
		        		ORDER BY BOARD_NO DESC) A )
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 조회수  -->
	<entry key="increaseCount">
		UPDATE BOARD
		SET COUNT = COUNT +1
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 동네 소식 게시글 하나 정보 조회하기 -->
	<entry key="selectNews">
		SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, BOARD_CONTENT
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS = 'Y'
		AND BOARD_NAME = '동네 소식'
		AND BOARD_NO = ?
	</entry>
	
	<!-- 동네소식 첨푸파일 조회 -->
	<entry key="selectNewsAttachment">
		SELECT FILE_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH
		FROM ATTACHMENT
		WHERE REF_BNO = ?
	</entry>
	
	<!-- 동네소식 댓글 작성 -->
	<entry key="newsInsertReply">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, REF_BNO, REPLY_WRITER)
		VALUES(SEQ_RNO.NEXTVAL,?,?,?)
	</entry>
	
	<!-- 동네소식 댓글 목록 조회 -->
	<entry key="newsSelectReply">
		SELECT REPLY_NO, REPLY_CONTENT, REF_BNO, NICKNAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		FROM REPLY R
		JOIN MEMBER M ON(REPLY_WRITER = USER_NO)
		WHERE R.STATUS = 'Y'
		AND REF_BNO = ?
		ORDER BY CREATE_DATE DESC, REPLY_NO DESC
	</entry>
	
	<!-- 동네 소식 댓글 삭제 -->
	<entry key="newsDeleteReply">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 동네 소식 댓글 수정 -->
	<entry key="newsUpdateReply">
		UPDATE REPLY
		SET REPLY_CONTENT = ?
			,MODIFY_DATE = SYSDATE
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 동네 소식 게시글 삭제 -->
	<entry key="deleteNewsBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>

	<entry key="bestPostList">
	SELECT *
	FROM
	    (SELECT BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_CONTENT,BOARD_NAME,CATEGORY,COUNT,CREATE_DATE,RANK()OVER(ORDER BY COUNT DESC,BOARD_NO DESC)AS RANK,COUNT(BOARDLIKE_NO) LIKECOUNT
	    FROM BOARD B
	    JOIN MEMBER M ON BOARD_WRITER = USER_NO
	    LEFT JOIN BOARD_LIKE ON BOARD_NO=BOARDLIKE_NO
	    WHERE B.STATUS='Y'
	    GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_CONTENT,BOARD_NAME,CATEGORY,COUNT,CREATE_DATE
	    ORDER BY COUNT DESC)
	<![CDATA[WHERE RANK <= 10]]>
	</entry>
	<!-- 자유 게시판 게시글 리스트 페이지 -->
	<entry key="getBoardFreeList">
	SELECT
		*
	FROM
		(
		SELECT 
			ROWNUM AS RNUM
			, B.BOARD_NO
			, B.BOARD_TITLE
			, B.BOARD_CONTENT 
			, B.COUNT
			, M.NICKNAME
			, B.CREATE_DATE 
			, B.BOARD_NAME
			, (SELECT COUNT(BOARDLIKE_NO) FROM BOARD_LIKE WHERE BOARDLIKE_NO = B.BOARD_NO) AS LIKE_CNT 
		FROM 
			BOARD B 
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		) A
	WHERE A.BOARD_NAME = '자유 게시판'
	AND A.RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- 자유게시판 검색페이지 -->
	<entry key="BoardFreeWithSearch">
		SELECT
		*
	FROM
		(
		SELECT 
			ROWNUM AS RNUM
			, B.BOARD_NO
			, B.BOARD_TITLE
			, B.BOARD_CONTENT 
			, B.COUNT
			, M.NICKNAME
			, B.CREATE_DATE 
			, B.BOARD_NAME
			, (SELECT COUNT(BOARDLIKE_NO) FROM BOARD_LIKE WHERE BOARDLIKE_NO = B.BOARD_NO) AS LIKE_CNT 
		FROM 
			BOARD B 
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		) A
	WHERE A.BOARD_NAME = '자유 게시판'
	AND A.RNUM BETWEEN ? AND ?
	AND (BOARD_TITLE LIKE '%'||?||'%' OR BOARD_CONTENT LIKE '%'||?||'%')	
	</entry>
	
	
	
	
	<entry key="getBoardFreeListCount">
	SELECT
		*
	FROM 
		BOARD
		WHERE STATUS = 'Y'
		AND BOARD_NAME = '자유 게시판'
	
	</entry>
	
	
	
	
	<entry key="searchKeyword">
		SELECT *
		FROM (SELECT ROWNUM RNUM,A.*
			FROM(SELECT BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE,COUNT(BOARDLIKE_NO) LIKECOUNT
				 FROM BOARD B
			     JOIN MEMBER ON BOARD_WRITER = USER_NO
				 LEFT JOIN BOARD_LIKE ON BOARD_NO = BOARDLIKE_NO
			     WHERE B.STATUS='Y' AND BOARD_TITLE LIKE '%'||?||'%'
			     GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE) A)
		WHERE RNUM BETWEEN ? AND ?
		ORDER BY CREATE_DATE DESC,BOARD_NO DESC
	</entry>
	
	<entry key="selectSearchListTitle">
	SELECT *
	FROM   (SELECT ROWNUM RNUM,A.*   
         FROM   (SELECT BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE,COUNT(BOARDLIKE_NO) LIKECOUNT
                 FROM BOARD B
                 JOIN MEMBER ON BOARD_WRITER = USER_NO
                 LEFT JOIN BOARD_LIKE ON BOARD_NO = BOARDLIKE_NO
                 WHERE B.STATUS='Y' AND BOARD_TITLE LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
                 GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE
                 ORDER BY COUNT DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectSearchListContent">
	SELECT *
	FROM   (SELECT ROWNUM RNUM,A.*   
         FROM   (SELECT BOARD_NO,NICKNAME,BOARD_CONTENT,BOARD_NAME,COUNT,CREATE_DATE,COUNT(BOARDLIKE_NO) LIKECOUNT
                 FROM BOARD B
                 JOIN MEMBER ON BOARD_WRITER = USER_NO
                 LEFT JOIN BOARD_LIKE ON BOARD_NO = BOARDLIKE_NO
                 WHERE B.STATUS='Y' AND BOARD_CONTENT LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
                 GROUP BY BOARD_NO,NICKNAME,BOARD_CONTENT,BOARD_NAME,COUNT,CREATE_DATE
                 ORDER BY COUNT DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectSearchListReply">
	SELECT *
	FROM   (SELECT ROWNUM RNUM,A.*   
         FROM   (SELECT REPLY_NO,REF_BNO,NICKNAME,REPLY_CONTENT,CREATE_DATE,MODIFY_DATE
                 FROM REPLY R
                 JOIN MEMBER ON REPLY_WRITER = USER_NO
                 WHERE R.STATUS='Y' AND REPLY_CONTENT LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
                 ORDER BY MODIFY_DATE DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="selectSearchListWriter">
	SELECT *
	FROM   (SELECT ROWNUM RNUM,A.*   
         FROM   (SELECT BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE,COUNT(BOARDLIKE_NO) LIKECOUNT
                 FROM BOARD B
                 JOIN MEMBER ON BOARD_WRITER = USER_NO
                 LEFT JOIN BOARD_LIKE ON BOARD_NO = BOARDLIKE_NO
                 WHERE B.STATUS='Y' AND NICKNAME LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
                 GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_NAME,COUNT,CREATE_DATE
                 ORDER BY COUNT DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 살림꿀팁 총 게시글 개수 구하기 -->
	<entry key="cleanSelectListCount">
		SELECT COUNT(*) COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
		AND BOARD_NAME = '살림 꿀팁' 
	</entry>
	
	<!-- 살림꾹팁 리스트 불러오기) -->
	<entry key="cleanSelectList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM (SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT, COUNT(BOARDLIKE_NO) LIKE_COUNT
		        		FROM BOARD B
		        		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		        		LEFT JOIN BOARD_LIKE ON (BOARDLIKE_NO = BOARD_NO)
		        		WHERE B.STATUS ='Y' AND BOARD_NAME = '살림 꿀팁'
		        		GROUP BY BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT
		        		ORDER BY BOARD_NO DESC) A )
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="newsBoardSearch">
	SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM (SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT, COUNT(BOARDLIKE_NO) LIKE_COUNT
		        		FROM BOARD B
		        		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		        		LEFT JOIN BOARD_LIKE ON (BOARDLIKE_NO = BOARD_NO)
		        		WHERE B.STATUS ='Y' AND BOARD_NAME = '동네 소식'
		        				AND (REGION = ? OR CATEGORY = ?)
		        		GROUP BY BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT
		        		ORDER BY BOARD_NO DESC) A )
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="lastestPostList">
		SELECT *
		FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_NAME
		        FROM BOARD
		        WHERE STATUS = 'Y'
		        ORDER BY BOARD_NO DESC)
		<![CDATA[where rownum <= 8]]>
	</entry>
	
	<entry key="selectKeywordCount">
	SELECT COUNT(*) COUNT
	FROM BOARD
	WHERE BOARD_TITLE LIKE '%'||?||'%'
	</entry>
	
	<entry key="selectListCountTitleTime">
	SELECT COUNT(*) COUNT
	FROM BOARD
	WHERE BOARD_TITLE LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
	</entry>
	
	<entry key="selectListCountContentTime">
	SELECT COUNT(*) COUNT
	FROM BOARD
	WHERE BOARD_CONTENT LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
	</entry>
	
	<entry key="selectListCountReplyTime">
	SELECT COUNT(*) COUNT
	FROM REPLY
	WHERE REPLY_CONTENT LIKE '%'||?||'%' AND TO_CHAR(SYSDATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
	</entry>
	
	<entry key="selectListCountWriterTime">
	SELECT COUNT(*) COUNT
	FROM BOARD
	WHERE BOARD_WRITER = (SELECT USER_NO FROM MEMBER WHERE NICKNAME=?) AND TO_CHAR(CREATE_DATE,'YYMMDD')>TO_CHAR(SYSDATE-?,'YYMMDD')
	</entry>
	
	<entry key="selectMyPostList">
		SELECT COUNT(*) AS COUNT
		FROM BOARD
		WHERE BOARD_WRITER = ?
	</entry>
	
	<entry key="selectMyPost">
		SELECT *
		FROM (SELECT ROWNUM AS RNUM, A.*
			   FROM (SELECT BOARD_NO, BOARD_TITLE, BOARD_NAME, COUNT, CREATE_DATE
			   		  FROM BOARD
			   		  WHERE BOARD_WRITER = ? AND STATUS = 'Y'
			   		  ORDER BY CREATE_DATE DESC) A)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="insertEachBoard">
	INSERT INTO BOARD VALUES(SEQ_BNO.NEXTVAL,(SELECT USER_NO FROM MEMBER WHERE NICKNAME=?),?,?,?,?,DEFAULT,DEFAULT,?,DEFAULT,DEFAULT)
	</entry>
	
	<entry key="insertEachAttachment">
	INSERT INTO ATTACHMENT VALUES(SEQ_ANO.NEXTVAL,SEQ_BNO.CURRVAL,?,?,?,DEFAULT,?,DEFAULT,NULL)
	</entry>
	
	<entry key="selectAttachment">
		SELECT FILE_NO,REF_BNO,ORIGIN_NAME,CHANGE_NAME,FILE_PATH,FILE_LEVEL
		FROM ATTACHMENT
		WHERE REF_BNO = ?
		AND STATUS = 'Y'
	</entry>
	
	<entry key="selectBestPostDetail">
	SELECT BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_CONTENT,BOARD_NAME,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,COUNT(BOARDLIKE_NO)AS LIKECOUNT
	FROM BOARD B
	JOIN MEMBER M ON BOARD_WRITER = USER_NO
	LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	WHERE B.STATUS = 'Y' AND BOARD_NO = ?
	GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,BOARD_CONTENT,BOARD_NAME,CATEGORY,COUNT,CREATE_DATE,REGION,BOARD_REPORT
	</entry>
	
	<!-- 살림꿀팁 게시글 하나 조회 -->
	<entry key="selectClean">
		SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, BOARD_CONTENT
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS = 'Y'
		AND BOARD_NAME = '살림 꿀팁'
		AND BOARD_NO = ?
	</entry>
	
	<entry key="foodSelectListCount">
		SELECT COUNT(*) COUNT
		FROM BOARD
		WHERE STATUS = 'Y' AND BOARD_NAME='동네 맛집'
	</entry>
	
	<entry key="selectFoodList">
	SELECT *    
	FROM (SELECT ROWNUM RNUM,A.*    
	    FROM (SELECT BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME "TITLEIMG",COUNT(BOARDLIKE_NO)AS LIKECOUNT
	        FROM BOARD B
	        JOIN MEMBER M ON BOARD_WRITER = USER_NO
	        LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	        JOIN ATTACHMENT A ON BOARD_NO = REF_BNO
	        WHERE B.STATUS = 'Y' AND BOARD_NAME = '동네 맛집' AND FILE_LEVEL = 2
	        GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME
	        ORDER BY CREATE_DATE DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="deletePost">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ? AND STATUS = 'Y'
	</entry>
	
	<entry key="deleteAttachment">
		UPDATE ATTACHMENT
		SET STATUS = 'N'
		WHERE REF_BNO = ? AND STATUS = 'Y'
	</entry>
	
	<entry key="foodPostList">
		SELECT *
		FROM (SELECT BOARD_NO, BOARD_TITLE, FILE_PATH||CHANGE_NAME AS "IMG", COUNT
        		FROM BOARD B
        		JOIN ATTACHMENT A ON(BOARD_NO = REF_BNO)
        		WHERE B.STATUS = 'Y'
        		ORDER BY COUNT DESC)
		<![CDATA[WHERE ROWNUM <= 8]]>
	</entry>
	
	<!-- 살림꿀팁 댓글 작성 -->
	<entry key="cleanInsertReply">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, REF_BNO, REPLY_WRITER)
		VALUES(SEQ_RNO.NEXTVAL,?,?,?)
	</entry>
	
	<!-- 살림꿀팁 댓글 목록 조회 -->
	<entry key="cleanSelectReply">
		SELECT REPLY_NO, REPLY_CONTENT, REF_BNO, NICKNAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		FROM REPLY R
		JOIN MEMBER M ON(REPLY_WRITER = USER_NO)
		WHERE R.STATUS = 'Y'
		AND REF_BNO = ?
		ORDER BY CREATE_DATE DESC, REPLY_NO DESC
	</entry>
	
	<!-- 살림꿀팁 댓글 삭제 -->
	<entry key="cleanDeleteReply">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 살림꿀팁 댓글 수정 -->
	<entry key="cleanUpdateReply">
		UPDATE REPLY
		SET REPLY_CONTENT = ?
			,MODIFY_DATE = SYSDATE
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<entry key="selectMyLike">
	SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM ( SELECT BOARD_NO, BOARD_NAME, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT
						FROM BOARD B
						JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
						WHERE B.BOARD_NO IN (SELECT BOARDLIKE_NO 
						                    FROM BOARD_LIKE 
						                    WHERE USER_NO = ?)
						ORDER BY BOARD_NO DESC) A )
	WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- ================================================================= -->
	
	<!-- 같이사요(buy) 총 게시글 개수 구하기 -->
	<entry key="buySelectListCount">
		SELECT COUNT(*) COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
		AND BOARD_NAME = '같이 사요' 
	</entry>

	<!-- 같이사요(buy) 리스트 불러오기(아직 좋아요 카운트 안불러옴) -->
	<entry key="buySelectList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM (SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT, COUNT(BOARDLIKE_NO) LIKE_COUNT
		        		FROM BOARD B
		        		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		        		LEFT JOIN BOARD_LIKE ON (BOARDLIKE_NO = BOARD_NO)
		        		WHERE B.STATUS ='Y' AND BOARD_NAME = '같이 사요'
		        		GROUP BY BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, COUNT
		        		ORDER BY BOARD_NO DESC) A )
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 조회수  -->
	<entry key="increaseCount">
		UPDATE BOARD
		SET COUNT = COUNT +1
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!--같이사요(buy) 게시글 하나 정보 조회하기 -->
	<entry key="selectBuy">
		SELECT BOARD_NO, BOARD_TITLE, NICKNAME, CREATE_DATE, BOARD_CONTENT
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		WHERE B.STATUS = 'Y'
		AND BOARD_NAME = '같이 사요'
		AND BOARD_NO = ?
	</entry>
	
	<!-- 같이사요(buy) 댓글 작성 -->
	<entry key="buyInsertReply">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, REF_BNO, REPLY_WRITER)
		VALUES(SEQ_RNO.NEXTVAL,?,?,?)
	</entry>
	
	<!-- 같이사요(buy) 댓글 목록 조회 -->
	<entry key="buySelectReply">
		SELECT REPLY_NO, REPLY_CONTENT, REF_BNO, NICKNAME, TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') CREATE_DATE
		FROM REPLY R
		JOIN MEMBER M ON(REPLY_WRITER = USER_NO)
		WHERE R.STATUS = 'Y'
		AND REF_BNO = ?
		ORDER BY CREATE_DATE DESC, REPLY_NO DESC
	</entry>
	
	<!-- 같이사요(buy) 댓글 삭제 -->
	<entry key="buyDeleteReply">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 같이사요(buy) 댓글 수정 -->
	<entry key="buyUpdateReply">
		UPDATE REPLY
		SET REPLY_CONTENT = ?
			,MODIFY_DATE = SYSDATE
		WHERE REPLY_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- faq -->
	<entry key="faqSelectListCount">
		SELECT COUNT(*) COUNT
		FROM FAQ
		WHERE STATUS = 'Y' 
	</entry>
	
	<entry key="faqSelectList">
		SELECT *
		FROM (SELECT ROWNUM RNUM, A.*
        		FROM (SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT
		        		FROM FAQ
		        		WHERE STATUS ='Y'
		        		ORDER BY FAQ_NO DESC) A )
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<entry key="faqInsertBoard">
		INSERT INTO FAQ(FAQ_NO
						   ,FAQ_TITLE
						   ,FAQ_CONTENT)
					VALUES(SEQ_FNO.NEXTVAL
							,?
							,?)
	</entry>
	
	<entry key="faqDeleteBoard">
		UPDATE FAQ
		SET STATUS = 'N'
		WHERE FAQ_NO = ? AND STATUS = 'Y'
	</entry>
	
	<entry key="selectFaq">
		SELECT FAQ_NO, FAQ_TITLE, FAQ_CONTENT
		FROM FAQ
		WHERE STATUS = 'Y'
		AND FAQ_NO = ?
	</entry>
	
	<entry key="updateFaq">
		UPDATE FAQ
		SET FAQ_TITLE = ? 
			,FAQ_CONTENT = ?
		WHERE FAQ_NO = ?
		AND STATUS = 'Y'
	</entry>

	<entry key="foodAllCategoryList">
    	SELECT BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME "TITLEIMG",COUNT(BOARDLIKE_NO)AS LIKECOUNT
        FROM BOARD B
        JOIN MEMBER M ON BOARD_WRITER = USER_NO
	    LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	    JOIN ATTACHMENT A ON BOARD_NO = REF_BNO
        WHERE B.STATUS = 'Y' AND BOARD_NAME = '동네 맛집' AND FILE_LEVEL = 2 AND CATEGORY = ?
	    GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME
	</entry>
	
	<entry key="foodRegionCategoryList">
    	SELECT BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME "TITLEIMG",COUNT(BOARDLIKE_NO)AS LIKECOUNT
        FROM BOARD B
        JOIN MEMBER M ON BOARD_WRITER = USER_NO
	    LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	    JOIN ATTACHMENT A ON BOARD_NO = REF_BNO
        WHERE B.STATUS = 'Y' AND BOARD_NAME = '동네 맛집' AND FILE_LEVEL = 2 AND CATEGORY = ? AND REGION LIKE '%'||?||'%'
	    GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME	
	</entry>
	
	<entry key="selectNoCTFoodList">
    	SELECT BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME "TITLEIMG",COUNT(BOARDLIKE_NO)AS LIKECOUNT
        FROM BOARD B
        JOIN MEMBER M ON BOARD_WRITER = USER_NO
	    LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	    JOIN ATTACHMENT A ON BOARD_NO = REF_BNO
        WHERE B.STATUS = 'Y' AND BOARD_NAME = '동네 맛집' AND FILE_LEVEL = 2
	    GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME
	</entry>
	
	<entry key="selectRegionFoodList">
    	SELECT BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME "TITLEIMG",COUNT(BOARDLIKE_NO)AS LIKECOUNT
        FROM BOARD B
        JOIN MEMBER M ON BOARD_WRITER = USER_NO
	    LEFT JOIN BOARD_LIKE BL ON BOARD_NO = BOARDLIKE_NO
	    JOIN ATTACHMENT A ON BOARD_NO = REF_BNO
        WHERE B.STATUS = 'Y' AND BOARD_NAME = '동네 맛집' AND FILE_LEVEL = 2 AND REGION LIKE '%'||?||'%'
	    GROUP BY BOARD_NO,NICKNAME,BOARD_TITLE,CATEGORY,B.COUNT,CREATE_DATE,REGION,BOARD_REPORT,FILE_PATH||CHANGE_NAME
	</entry>
</properties>